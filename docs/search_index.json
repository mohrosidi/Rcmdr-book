[
["index.html", "Panduan Lengkap Analisis Statistika Menggunakan R Commander Pengantar", " Panduan Lengkap Analisis Statistika Menggunakan R Commander Mohammad Rosidi 2020-01-08 Pengantar body{ text-align: justify} "],
["intro.html", "Chapter 1 Pengenalan R dan R Commander", " Chapter 1 Pengenalan R dan R Commander body{ text-align: justify} Pada Chapter 1 pembaca akan belajar mengenai perangkat lunak R, Rcmdr, dan cara instalasi keduanya. Pembaca juga akan belajar tampilan antar muka dan fitur apa saja yang disediakan pada Rcmdr. Detail terkait fitur-fitur Rcmdr yang digunakan dalam melakukan analisis statistika akan dijelaskan pada Chapter-Chapter selanjutnya. "],
["whatR.html", "1.1 Apa Itu R dan Rcmdr?", " 1.1 Apa Itu R dan Rcmdr? body{ text-align: justify} R Merupakan bahasa yang digunakan dalam komputasi statistik yang pertama kali dikembangkan oleh Ross Ihaka dan Robert Gentlement di University of Auckland New Zealand yang merupakan akronim dari nama depan kedua pembuatnya. Sebelum R dikenal ada S yang dikembangkan oleh John Chambers dan rekan-rekan dari Bell Laboratories yang memiliki fungsi yang sama untuk komputasi statistik. Hal yang membedakan antara keduanya adalah R merupakan sistem komputasi yang bersifat gratis.Logo R dapat dilihat pada Gambar 1.1. Gambar 1.1: Logo R. Rcmdr atau R Commander (Fox, 2005) merupakan paket yang menyediakan tampilan antar muka (GUI) yang memungkinkan pengguna untuk berinteraksi dengan R melalui point-and-click. Keuntungan cara berinteraksi semacam itu membuat pengguna dapat lebih memfokuskan diri pada metode statistik yang digunakannya dibandingkan melakukan penulisan sintaks program untuk memperoleh hasil perhitungan statistik yang sama. Selain itu, sintaks yang digunakan program untuk melakukan perhitungan ditampilkan ke dalam editor yang tersedia pada jendela Rcmdr secara otomatis. Hal tersebut dapat mempermudah analis dalam mempelajari kode apa saja yang perlu diketikkan untuk menghasilkan hasil perhitungan statistik yang analis perlukan. "],
["install.html", "1.2 Memasang R dan R Commander", " 1.2 Memasang R dan R Commander Pada Chapter 1.2 pembaca akan belajar bagaimana cara memasang R dan R Commander Pembaca juga akan belajar bagaimana cara menjalankan R Commander dari R. Untuk memperoleh R pembaca dapat melakukan unduh pada situs CRAN. Tampilan situs untuk mengunduh R ditampilkan pada Gambar 1.2. Gambar 1.2: Tampilan situs CRAN. 1.2.1 Memasang R pada Windows R for Windows dapat diperoleh melalui tautan CRAN. Berdasarkan halaman situs diketahui bahwa saat ini versi R yang tersedia adalah versi R 3.6.2. Tampilan situs tersebut dapat dilihat pada Gambar 1.3. Gambar 1.3: Tampilan halaman situs R untuk mengunduh R for windows. Tahapan instalasi: Double click R installer yang telah di unduh sehingga muncul jendela instalasi. Pilih bahasa yang akan digunakan. Pembaca hanya perlu menekan tombol next pada jedela yang muncul untuk memasang R dengan konfigurasi default. Setelah proses instalasi selesai pembaca dapat menekan tombol finish. Gambar 1.4: Tampilan tahapan kunci proses instalasi R for Windows. Untuk lebih lengkapnya, pembaca dapat menyaksikan video yang dibuat oleh Xperimental Learning. 1.2.2 Memasang R pada Mac OS X Sebelum melakukan proses instalasi pastikan Mac OS X yang pembaca miliki up to date. Untuk mengetahuinya pembaca dapat menjalakan Software Update dari menu yang berada pada pojok kiri atas layar. Hal tersebut penting sebab R mengasumsikan bahwa sistem yang kita miliki telah up to date. R for Mac OS X dapat diperoleh melalui tautan XQuartz. Selanjutnya pembaca tinggal mengunduh file yang memiliki format file XQuartz-x.y.zz.dmg. Tampilan situs tersebut dapat dilihat pada Gambar 1.5. Gambar 1.5: Tampilan halaman situs XQuartz. Tahapan instalasi: Mengunduh disk image file XQuatz-x.y.zz.dmg dimana x.y.zz merupakan versi dari XQuartz. Double click pada file tersebut. Jika pembaca menemukan file XQuatz.pkg, Double click pada file tersebut. Lakukan klik pada tombol continue untuk konfigurasi instalasi default. Setelah proses instalasi log out dari sesi komputer pembaca sekarang atau lakukan reboot/restart dan masuk kembali menggunakan akun Mac OS X pembaca. Gambar 1.6: Tampilan awal proses instalasi R for Mac OS X (Sumber: Fox, 2017). Alternatif metode instalasi lainnya dapat pembaca baca pada artikel yang ditulis oleh Galarnyk(2017). 1.2.3 Memasang R pada Linux dan Unix Berdasarkan situs CRAN, R tersedia pada sejumlah distribusi linux, seperti: Debian, RedHat, SUSE, dan Ubuntu. Jika pembaca memiliki sistem linux atau unix yang tidak compatible berdasarkan daftar distribusi linux yang tersedia, pembaca perlu melakukan kompilasi R dari kode sumber. Prosedur untuk melakukan hal tersebut dijelaskan pada halaman R FAQ. 1.2.4 Memasang R Commander Terdapat dua buah cara untuk memasang R Commander pada R, yaitu: melalui sintaks pada R Console dan melalui menu Packages. Untuk melakukan instalasi menggunakan R Console, jalankan sintaks berikut: install.packages(&quot;Rcmdr&quot;) Program selanjutnya akan memasang R Commander dan paket-paket lain yang menjadi dependency-nya. Untuk instalasi melalui menu Packages, langkah-langkah yang perlu dilakukan adalah sebagai berikut: Jalankan R dengan cara double click pada shortcut R yang ada pada desktop atau melalui menu sistem operasi yang pembaca miliki. Klik pada Packages/Install package(s).... Pilih CRAN mirror yang tersedia, klik OK. Pembaca dapat pula memilih CRAN mirror dari Indonesia. Jika gagal pembaca dapat mencobanya dengan menggunakan CRAN mirror dari negara lain. Pilih paket Rcmdr, klik OK. Saat pertama kali proses instalasi akan muncul dialog yang berisi apakah pembaca setuju jika R membuat sebuah directory yang berisi paket Rcmdr. R akan mengunduh paket Rcmdr dan dependency-nya. Gambar 1.7: Tampilan proses instalasi menggunakan menu Packages. "],
["loadrcmdr.html", "1.3 Menjalankan R dan R Commander", " 1.3 Menjalankan R dan R Commander body{ text-align: justify} Untuk menjalankan R Commander pada R terdapat dua metode, yaitu: menggunakan fungsi library() dan melalui menu Packages. Penggunaan fungsi library() untuk memuat Rcmdr ditampilkan pada sintaks berikut: library(Rcmdr) Untuk memuat R Commander menggunakan menu Packages dapat dilakukan melalui langkah-langkah berikut: Jalankan R dengan cara double click pada shortcut R yang ada pada desktop atau melalui menu sistem operasi yang pembaca miliki. Klik pada Packages/Install package(s).... Setelah muncul jendela daftar paket yang telah terpasang, klik pada paket Rcmdr. R akan memuat paket Rcmdr dan dependency-nya. Gambar 1.8: Tampilan proses pemuatan paket Rcmdr. "],
["tampilan-r-dan-r-commander.html", "1.4 Tampilan R dan R Commander", " 1.4 Tampilan R dan R Commander body{ text-align: justify} 1.4.1 Antarmuka R Tampilan R saat pertama kali dilankan dapat dilihat seperti pada Gambar 1.9. Pada Gambar tersebut, jendela R terbagi menjadi 4 bagian, antara lain: Gambar 1.9: Tampilan antar muka jendela R for windows. Bagian 1: baris menu yang terdiri atas menu: File : menu yang berkaitan dengan cara membuat dan menyimpan script R, memuat dan menyimpan history kerja, merubah direktori kerja, mencetak dan menyimpan file, dan keluar dari R. Edit : menu yang berkaitan dengan sejumlah perintah untuk melakukan editing seperti copy dan paste, memilih atau meng-highlight sejumlah sintaks, membersihkan R console, membuka data editor, dan perintah untuk membuka jendela pengaturan GUI R. View : menu yang memungkinkan pengguna melakukan pengaturan tampilan jendela R seperti menampilkan panel toolbar atau menampilkan panel status. Misc : menu yang menampilkan sejumlah submenu perintah dan pilihan untuk menghentikan proses komputasi, menampilkan dan menghapus seluruh objek yang telah dibuat, dan menampilkan paket-paket yang aktif. Packages : menu yang digunakan untuk mengatur paket-paket yang ada di R, seperti: memuat paket, memasang dan menghapus paket, memperbaharui paket, dan melakukan pengaturan repository berupa lokasi paket-paket yang akan dipasang. Windows : menu yang menampilkan fungsi pengaturan jendela-jendela yang ada pada Bagian 4. Help : menu bantuan R. Secara lengkap fitur yang tersedia pada baris menu ditampilkan pada diagram pohon menu berikut: File |- Source R code... |- New script... |- Open script... |- Display file(s)... |- Load Workspace... |- Save Workspace... |- Load History... |- Save History... |- Change dir... |- Print... |- Save to File... |- Exit Edit |- Copy |- Paste |- Paste commands only |- Copy and Paste |- Select all |- Clear console |- Data editor |- GUI preferences View |- Toolbar |- Statusbar Misc |- Stop current computation |- Stop all computations |- Buffered output |- Word completion |- Filename completion |- List objects |- Remove all objects |- List search path Packages |- Load package... |- Set CRAN mirror... |- Select repositories... |- Install package(s)... |- Update package(s)... |- Install package(s) from local files... Misc |- Cascade |- Tile Horizontally |- Tile Vertically |- Arrange Icons Help |- Console |- FAQ on R |- FAQ on R for Windosw |- Manuals (in PDF) | |- An Introduction tor R | |- R reference | |- R Data Import/Export | |- R Language Definition | |- Writing R Extensions | |- R Internals | |- R Installation and Administration | |- Sweave User |- R functions (text)... |- Html help |- Search help... |- search.r-project.org... |- Apropos... |- R Project home page |- CRAN home page |- About Bagian 2 : panel yang berisikan toolbar untuk membuka R script, memuat dan menyimpan ruang kerja, perintah copy and paste, menghentikan komputasi, dan mencetak hasil perhitungan pada jendela console dan editor. Bagian 3 : jendela console. Bagian 4 : ruang kosong lokasi jendela baru seperti console dan grafik dimuat. 1.4.2 Antarmuka R Commander Tampilan R Commander saat pertama kali dijalankan dapat dilihat seperti pada Gambar 1.10. Pada Gambar tersebut, jendela R Commander terbagi menjadi 5 bagian, antara lain: Gambar 1.10: Tampilan antar muka jendela R Commander. Bagian 1 : baris menu yang terdiri atas menu: File : menu untuk memuat dan menyimpan file script, menyimpan output dan ruang kerja R; dan keluar dari R Commander atau dari R dan R Commander. Edit : menu (cut, copy, paste, dll.) Untuk mengedit teks di berbagai panel dan tab. Mengklik kanan di salah satu panel atau tab ini juga memunculkan menu edit sesuai dengan tab yang digunakan. Data : menu yang terdiri atas submenu untuk membaca dan mengolah data. Statistics : menu yang terdiri atas berbagai submenu untuk melakukan berbagai analisis statistik. Graphs : menu yang terdiri atas submenu yang berisikan berbagai metode visualisasi data. Models : menu dan submenu yang digunakan untuk memperoleh ringkasan numerik, rentang keyakinan, uji hipotesis, diagnosa, dan grafik dari model statistik, dan menambahkan hasil diagnosa pada dataset seperti menambahkan residu atau error model pada dataset. Distribution : menu yang terdiri atas submenu yang digunakan untuk memperoleh probabilitas kumulatif, densitas probabilitas, kuantil, dan grafik dari distribusi statistika standar. Tools : menu yang digunakan untuk mengakses paket R (contoh: memuat dataset dari paket lainnya, memuat paket untuk menambahkan metode analisis statistik, dll), untuk memuat paket Rcmdr plug-in, mengatur sebagian besar opsi pada R Commander, dan untuk memasang optional auxilary software. Help : menu bantuan yang berguna untuk memperoleh informasi terkait R Commander dan paket terkait lainnya. Secara lengkap menu dan submenu pada R Commander ditampilkan pada diagram pohon berikut: File |- Change working directory... |- Open script file... |- Save script... |- Save script as... |- Open R Markdown file... |- Save R Markdown file... |- Save R Markdown file as... |- Save output... |- Save output as... |- Save R workspace... |- Save R workspace as... |- Exit | |- From Commander | |- From Commander and R Edit |- Edit R Markdown document |- Edit knitr document |- Remove last Markdown command block |- Remove last knitr command block |- Cut |- Copy |- Paste |- Delete |- Find |- Select all |- Undo |- Redo |- Clear window Data |- New data set... |- Load data set... |- Merge data sets... |- Import data | |- from text file, clipboard, or URL... | |- from SPSS data set... | |- from SAS xport file... | |- from SAS b7dat file... | |- from Minitab data set... | |- from STATA data set... | |- from Excel file... |- Data in packages | |- List data sets in packages | |- Read data set from an attached package... |- Active data set | |- View data... | |- Select active data set... | |- Refresh active data set | |- Help on active data set (if available) | |- Variables in active data set | |- Set case names... | |- Subset active data set... | |- Sort active data set... | |- Aggregate variables in active data set... | |- Remove row(s) from active data set... | |- Stack variables in active data set... | |- Remove cases with missing data... | |- Save active data set... | |- Export active data set... |- Manage variables in active data set | |- Recode variable... | |- Compute new variable... | |- Add observation numbers to data set | |- Standardize variables... | |- Convert numeric variables to factors... | |- Bin numeric variable... | |- Reorder factor levels... | |- Drop unused factor levels... | |- Define contrasts for a factor... | |- Rename variables... | |- Delete variables from data set ... Statistics |- Summaries | |- Active data set | |- Numerical summaries... | |- Frequency distributions... | |- Count missing observations | |- Table of statistics... | |- Correlation matrix... | |- Correlation test... | |- Test of normality... | |- Transform toward normality... |-Contingency tables | |- Two-way table... | |- Multi-way table... | |- Enter and analyze two-way table... |- Means | |- Single-sample t-test... | |- Independent samples t-test... | |- Paired t-test... | |- One-way ANOVA... | |- Multi-way ANOVA... |- Proportions | |- Single-sample proportion test... | |- Two-sample proportions test... |- Variances | |- Two-variances F-test... | |- Bartlett&#39;s test... | |- Levene&#39;s test... |- Nonparametric tests | |- Two-sample Wilcoxon test... | |- Single-sample Wilcoxon test... | |- Paired-samples Wilcoxon test... | |- Kruskal-Wallis test... | |- Friedman rank-sum test... |- Dimensional analysis | |- Scale reliability... | |- Principal-components analysis... | |- Factor analysis... | |- Confirmatory factor analysis... | |- Cluster analysis | | |- k-means cluster analysis... | | |- Hierarchical cluster analysis... | | |- Summarize hierarchical clustering... | | |- Add hierarchical clustering to data set... |- Fit models | |- Linear regression... | |- Linear model... | |- Generalized linear model... | |- Multinomial logit model... | |- Ordinal regression model... Graphs |- Color palette... |- Index plot... |- Dot plot... |- Histogram... |- Plot discrete numeric variable...... |- Density estimate... |- Stem-and-leaf display... |- Boxplot... |- Quantile-comparison plot... |- Symmetry boxplot... |- Scatterplot... |- Scatterplot matrix... |- Line graph... |- XY conditioning plot... |- Plot of means... |- Strip chart... |- Bar graph... |- Pie chart... |- 3D graph | |- 3D scatterplot... | |- Identify observations with mouse | |- Save graph to file |- Save graph to file | |- as bitmap... | |- as PDF/Postscript/EPS... | |- 3D RGL graph... Models |- Select active model... |- Summarize model |- Compare model coefficients... |- Add observation statistics to data... |- Akaike Information Criterion (AIC) |- Bayesian Information Criterion (BIC) |- Stepwise model selection... |- Subset model selection... |- Confidence intervals...... |- Bootstrap confidence intervals... |- Delta method confidence interval... |- Hypothesis tests | |- ANOVA table... | |- Compare two models... | |- Linear hypothesis... |- Numerical diagnostics | |- Variance-inflation factors | |- Breusch-Pagan test for heteroscedasticity... | |- Durbin-Watson test for autocorrelation... | |- RESET test for nonlinearity... | |- Bonferroni outlier test | |- Response transformation... |- Graphs | |- Basic diagnostic plots | |- Residual quantile-comparison plot... | |- Component+residual plots... | |- Added-variable plots... | |- Influence plot... | |- Effect plots... | |- Predictor effect plots... Distributions |- Set random number generator seed... |- Continuous distributions | |- Normal distribution | | |- Normal quantiles... | | |- Normal probabilities... | | |- Plot normal distribution... | | |- Sample from normal distribution... | |- t distribution | | |- t quantiles... | | |- t probabilities... | | |- Plot t distribution... | | |- Sample from t distribution... | |- Chi-squared distribution | | |- Chi-squared quantiles... | | |- Chi-squared probabilities... | | |- Plot chi-squared distribution... | | |- Sample from chi-squared distribution... | |- F distribution | | |- F quantiles... | | |- F probabilities... | | |- Plot F distribution... | | |- Sample from F distribution... | |- Exponential distribution | | |- Exponential quantiles... | | |- Exponential probabilities... | | |- Plot exponential distribution... | | |- Sample from exponential distribution... | |- Uniform distribution | | |- Uniform quantiles... | | |- Uniform probabilities... | | |- Plot uniform distribution... | | |- Sample from uniform distribution... | |- Beta distribution | | |- Beta quantiles... | | |- Beta probabilities... | | |- Plot beta distribution... | | |- Sample from beta distribution... | |- Cauchy distribution | | |- Cauchy quantiles... | | |- Cauchy probabilities... | | |- Plot Cauchy distribution... | | |- Sample from Cauchy distribution... | |- Logistic distribution | | |- Logistic quantiles... | | |- Logistic probabilities... | | |- Plot logistic distribution... | | |- Sample from logistic distribution... | |- Lognormal distribution | | |- Lognormal quantiles... | | |- Lognormal probabilities... | | |- Plot lognormal distribution... | | |- Sample from lognormal distribution... | |- Gamma distribution | | |- Gamma quantiles... | | |- Gamma probabilities... | | |- Plot gamma distribution... | | |- Sample from gamma distribution... | |- Weibull distribution | | |- Weibull quantiles... | | |- Weibull probabilities... | | |- Plot Weibull distribution... | | |- Sample from Weibull distribution... | |- Gumbel distribution | | |- Gumbel quantiles... | | |- Gumbel probabilities... | | |- Plot Gumbel distribution... | | |- Sample from Gumbel distribution... |- Discrete distributions | |- Binomial distribution | | |- Binomial quantiles... | | |- Binomial tail probabilities... | | |- Binomial probabilities... | | |- Plot binomial distribution... | | |- Sample from binomial distribution... | |- Poisson distribution | | |- Poisson quantiles... | | |- Poisson tail probabilities... | | |- Poisson probabilities... | | |- Plot Poisson distribution... | | |- Sample from Poisson distribution... | |- Geometric distribution | | |- Geometric quantiles... | | |- Geometric tail probabilities... | | |- Geometric probabilities... | | |- Plot geometric distribution... | | |- Sample from geometric distribution... | |- Hypergeometric distribution | | |- Hypergeometric quantiles... | | |- Hypergeometric tail probabilities... | | |- Hypergeometric probabilities... | | |- Plot hypergeometric distribution... | | |- Sample from hypergeometric distribution... | |- Negative binomial distribution | | |- Negative binomial quantiles... | | |- Negative binomial tail probabilities... | | |- Negative binomial probabilities... | | |- Plot negative binomial distribution... | | |- Sample from negative binomial distribution... Tools |- Load package(s)... |- Load Rcmdr plug-in(s)... |- Options... |- Save Rcmdr options... |- Manage Mac OS X app nap for R.app... |- Install auxiliary software... Help |- Commander help |- Introduction to the R Commander |- R Commander website |- About Rcmdr |- Help on active data set (if available) |- Start R help system |- R website |- Using R Markdown Item pada menu akan tidak aktif (tulisan berwarna abu-abu) apabila tidak ada sesuai dengan konteks tertentu, misal: tidak ada dataset aktif maka sebagian besar submenu Statistics akan tidak aktif. Contoh lainnya adalah tidak adanya data kategori pada dataset aktir maka submenu tabel kontingensi tidak akan aktif. Bagian 2: baris toolbar berupa tombol yang dapat digunakan untuk berinteraksi dengan objek data atau model yang ada. Tombol-tombol tersebut terdiri atas: Data set : menampilkan nama dataset yang aktif dan memilih dataset yang akan diaktifkan. Edit data set : digunakan untuk melakukan proses editing pada dataset seperti: merubah nilai baris dan kolom, merubah nama kolom, merubah nama baris, dan menambahkan atau menghapus observasi. View data set : melihat observasi pada dataset aktif. Model : menampilkan dan memilih model statistik yang telah dibuat. Bagian 3: 2 buah tab lembar kerja yang terdiri atas: R Script : menampilkan script perintah yang digunakan untuk menghasilkan output. Pembaca dapat melakukan proses editing pada script tersebut dan menjalankanya kembali untuk menambah kompleksitas pada luaran yanng dihasilkan. R Markdown : membuat dokumentasi dari analisis yang telah dilakukan. Bagian 4: Tombol submit. Untuk menjalankan kembali R Script yang telah dibuat, pembaca dapat meng-highlight script atau sintaks yang hendak diperoleh kembali hasilnya dan tekan tombol Submit. Bagian 5: Output box. Kotak ini berfungsi untuk menampilkan hasil perhitungan berdasarkan sintaks yang dimasukkan atau di-submit. Bagian 6: Messages box. Menampilkan sejumlah pesan terkait operasi yang dilakukan. Pesan dapat berupa error, warnings, dan note. "],
["datamanage.html", "Chapter 2 Manajemen Data", " Chapter 2 Manajemen Data body{ text-align: justify} Pada Chapter 2, penulis akan menjelaskan kepada pembaca bagaimana cara menyiapkan data sebelum dilakukan analisa pada R Commander. Adapun yang akan dijelaskan pada Chapter 2, antara lain: Operator operasi yang digunakan pada R, Jenis dan struktur data yang ada pada R, Konsep tidy data, Input data pada R Commander, Membaca data dari file eksternal, Membaca data dari paket, Menyimpan dan memuat data, Memodifikasi Variabel pada data, dan Memanipulasi Dataset. "],
["opop.html", "2.1 Operator Operasi Pada R", " 2.1 Operator Operasi Pada R body{ text-align: justify} Terdapat sejumlah operator operasi yang penting untuk pembaca ketahui, antara lain: Operator aritmatika, Operator perbandingan, dan Operator logika. 2.1.1 Operator Aritmatika Proses perhitungan akan ditangani oleh fungsi khusus. R akan memahami urutannya secara benar. Kecuali kita secara eksplisit menetapkan yang lain. Sebagai contoh tuliskan dan jalankan sintaks berikut pada Console R (tekan enter) maupun R Commander (tekan tombol submit): 2+4*2 ## [1] 10 Bandingkan dengan sintaks berikut: (2+4)*2 ## [1] 12 TIPS!:R dapat digunakan sebagai kalkulator Berdasarkan kedua hasil tersebut dapat disimpulkan bahwa ketika kita tidak menetapkan urutan perhitungan menggunakan tanda kurung, R akan secara otomatis akan menghitung terlebih dahulu perkalian atau pembangian. Operator aritmatika yang disediakan R disajikan pada Tabel 2.1: Tabel 2.1: Operator Aritmatika R. Simbol Keterangan + Addition, untuk operasi penjumlahan - Substraction, untuk operasi pengurangan * Multiplication, untuk operasi pembagian / Division, untuk operasi pembagian ^ Eksponentiation, untuk operasi pemangkatan %% Modulus, Untuk mencari sisa pembagian %/% Integer, Untuk mencari bilangan bulat hasil pembagian saja dan tanpa sisa pembagian Untuk lebih memahaminya berikut contoh sintaks penerapan operator tersebut. # Addition 5+3 ## [1] 8 # Substraction 5-3 ## [1] 2 # Multiplication 5*3 ## [1] 15 # Division 5/3 ## [1] 1.667 # Eksponetiation 5^3 ## [1] 125 # Modulus 5%%3 ## [1] 2 # Integer 5%/%3 ## [1] 1 Penggunaan operator aritmatika perlu mempertimbangkan hierarki prioritas operasinya. Pada contoh sebelumnya kita telah belajar bahwa operasi aritmatika akan dikerjakan terlebih dahulu dari yang ada di dalam tanda kurung lalu setelah itu akan diikuti oleh operasi lainnya. Secara lengkap, hierarki prioritas operasi aritmatika dirangkum pada Tabel 2.2: Tabel 2.2: Hierarki prioritas operasi operator aritmatika. Prioritas Operator Keterangan 1 +,- unari (tanda +,-) 2 ^ 3 *,/,%%,%/% 4 +,- binari Berdasarkan Tabel 2.2, pembaca dapat memprediksi output dari operasi berikut: -2+(3^2*2)/3 Operasi tersebut akan menghasilkan nilai 4 dengan urutan pengerjaan sebagai berikut: Pemberian tanda negatif pada angka 2 Operasi dalam tanda kurung dengan urutan eksponensiasi (3^2) diikuti perkalian (9*2) Operasi pembagian terhadap nilai dalam kurung dengan angka 3 (18/3) Operasi penjumlahan (-2+6) 2.1.2 Operator Perbandingan Operator relasi digunakan untuk membandingkan satu objek dengan objek lainnya. Operator yang disediakan R disajikan pada Tabel 2.3. Tabel 2.3: Operator Relasi R. Simbol Keterangan Deskripsi == sama dengan bernilai TRUE jika kedua objek bernilai sama != tidak sama denga bernilai TRUE jika kedua objek tidak bernilai sama &gt; lebih besar dari bernilai TRUE jika nilai objek kanan lebih besar dari nilai objek kiri &lt; lebih kecil dari bernilai TRUE jika nilai objek kanan lebih kecil dari nilai objek kiri &gt;= lebih besar sama dengan bernilai TRUE jika nilai objek kanan lebih besar atau sama dengan dari nilai objek kiri &lt;= lebih kecil sama dengan bernilai TRUE jika nilai objek kanan lebih kecil atau sama dengan dari nilai objek kiri Berikut adalah penerapan operator pada tabel tersebut: x &lt;- 34 y &lt;- 35 # Operator &gt; x &gt; y ## [1] FALSE # Operator &lt; x &lt; y ## [1] TRUE # operator == x == y ## [1] FALSE # Operator &gt;= x &gt;= y ## [1] FALSE # Operator &lt;= x &lt;= y ## [1] TRUE # Operator != x != y ## [1] TRUE Operator perbandingan memiliki hierarki prioritas yang lebih rendah dibandingkan dengan operator aritmatika. Pembaharuan Tabel 2.2 dilakukan dengan menambahkan operator perbandingan ditampilkan pada Tabel 2.4. Tabel 2.4: Hierarki prioritas operasi dengan penambahan operator perbandingan. Prioritas Operator Keterangan 1 +,- unari (tanda +,-) 2 ^ 3 *,/,%%,%/% 4 +,- binari 5 &lt;,&lt;=,&gt;,&gt;= 6 ==,!= 2.1.3 Operator Logika Operator logika hanya berlaku pada vektor dengan tipe logical, numeric, atau complex. Semua angka bernilai 1 akan dianggap bernilai logika TRUE. Operator logika yang disediakan R dapat dilihat pada Tabel 2.5. Tabel 2.5: Operator logika R. Simbol Keterangan &amp;&amp; Operator logika AND || Operator logika OR ! Opeartor logika NOT &amp; Operator logika AND element wise | Operator logika OR element wise Penerapannya terdapat pada sintaks berikut: v &lt;- c(TRUE,TRUE, FALSE) t &lt;- c(FALSE,FALSE,FALSE) # Operator &amp;&amp; print(v&amp;&amp;t) ## [1] FALSE # Operator || print(v||t) ## [1] TRUE # Operator ! print(!v) ## [1] FALSE FALSE TRUE # operator &amp; print(v&amp;t) ## [1] FALSE FALSE FALSE # Operator | print(v|t) ## [1] TRUE TRUE FALSE operator &amp; dan | akan mengecek logika tiap elemen pada vektor secara berpesangan (sesuai urutan dari kiri ke kanan). Operator %% dan || hanya mengecek dari kiri ke kanan pada observasi pertama. Misal saat menggunakan &amp;&amp; jika observasi pertama TRUE maka observasi pertama pada vektor lainnya akan dicek, namun jika observasi pertama FALSE maka proses akan segera dihentikan dan menghasilkan FALSE. "],
["tipe-dan-struktur-data.html", "2.2 Tipe dan Struktur Data", " 2.2 Tipe dan Struktur Data body{ text-align: justify} Data pada R dapat dikelompokan berdasarkan beberapa tipe. Tipe data pada R disajikan pada Tabel 2.6. Tabel 2.6: Tipe data R. Tipe Data Contoh Keterangan Logical TRUE, FALSE Nilai Boolean Numeric 12.3, 5, 999 Segala jenis angka Integer 23L, 97L, 3L Bilangan integer (bilangan bulat) Complex 2i, 3i, 9i Bilangan kompleks Character ‘a’, “b”, “123” Karakter dan string Factor 1, 0, “Merah” Dapat berupa numerik atau string (namun pada proses akan terbaca sebagai angka) Raw Identik dengan “hello” Segala jenis data yang disimpan sebagai raw bytes Sintaks berikut adalah contoh dari tipe data pada R. Untuk mengetahui tipa data suatu objek kita dapat menggunakan perintah class() # Logical apel &lt;- TRUE class(apel) ## [1] &quot;logical&quot; # Numeric x &lt;- 2.3 class(x) ## [1] &quot;numeric&quot; # Integer y &lt;- 2L class(y) ## [1] &quot;integer&quot; # Compleks z &lt;- 5+2i class(z) ## [1] &quot;complex&quot; # string w &lt;- &quot;saya&quot; class(w) ## [1] &quot;character&quot; # Raw xy &lt;- charToRaw(&quot;hello world&quot;) class(xy) ## [1] &quot;raw&quot; Keenam jenis data tersebut disebut sebagai tipe data atomik. Hal ini disebabkan karena hanya dapat menangani satu tipe data saja. Misalnya hanya numeric atau hanya integer. Selain menggunakan fungsi class(), kita dapat pula menggunakan fungsi is_numeric(), is.character(), is.logical(), dan sebagainya berdasarkan jenis data apa yang ingin kita cek. Berbeda dengan fungsi class(), ouput yang dihasilkan pada fungsi seperti is_numeric() adalah nilai Boolean sehingga fungsi ini hanya digunakan untuk mengecek apakah jenis data pada objek sama seperti yang kita pikirkan. Sebagai contoh disajikan pada sintaks berikut: Struktur data diklasifikasikan berdasarkan dimensi data dan tipe data di dalamnya (homogen atau heterogen). Klasifikasi jenis data disajikan pada Tabel 2.7. Tabel 2.7: Struktur data R. Dimensi Homogen Heterogen 1d Atomik vektor List 2d Matriks Dataframe nd Array Berdasarkan Tabel tersebut dapat kita lihat bahwa objek terbagi atas dua buah struktur data yaitu homogen dan heterogen. Objek dengan struktur data homogen hanya dapat menyimpan satu tipe atau jenis data saja (numerik saja atau factor saja), sedangkan objek dengan struktur data heterogen akan dapat menyimpan berbagai jenis data. "],
["tidydata.html", "2.3 Konsep Tidy Data", " 2.3 Konsep Tidy Data body{ text-align: justify} Sebelum memulai analisa terhadap data yang kita miliki, umumnya kita akan merapikan data yang akan kita gunakan. Tujuannya adalah agar data yang akan digunakan sudah siap untuk dilakukan analisa dengan software tertentu seperti R atau R Commander, dimana pada dataset perlu jelas antara variabel dan nilai (value), serta untuk mempermudah dalah memperoleh informasi pada data. Sebelum kita melakukan analisa di dataset tersebut, kita harus tahu terlebih dahulu apa saja syarat suatu dataset dikatakan rapi (tidy). Berikut adalah syaratnya: Setiap variabel harus memiliki kolomnya sendiri Setiap observasi harus memiliki barisnya sendiri Setiap nilai berada pada sel tersendiri Ketiga syarat tersebut saling berhubungan sehingga jika salah satu syarat tersebut tidak terpenuhi, maka dataset belum bisa dikatakan tidy. Ketiga syarat tersebut dapat divisualisasikan melalui Gambar 2.1. Gambar 2.1: Visualisasi 3 rule tidy data (Sumber: Grolemund dan Wickham, 2017). "],
["input-data-pada-r-commander.html", "2.4 Input Data pada R Commander", " 2.4 Input Data pada R Commander body{ text-align: justify} Input data dapat dilakukan secara langsung pada R Commander. Input data secara langsung umumnya dilakukan jika jumlah data yag kita miliki relatif kecil. Untuk melakukanya jalakan tahapan berikut: Pada menu, klik Data/New data set.... Klik OK, Pada jedela yang muncul, ketikkan nama dataset yang kita inginkan. Klik OK Pada jendela Data Editor:Nama_Dataset, ketikkan data yang kita miliki. Untuk menambah baris klik tombol Add row, sedangkan untuk menambah kolom klik tombol Add column. Untuk mengubah nama kolom, klik pada bagian nama kolom dan ketikkan nama kolom yang diinginkan. Secara default rowname akan dinamai urutan observasi. Namun, kita dapat memberikan nama pada masing-masing kolom dengan cara meng-klik nama baris pada tiap barisnya. Untuk mengecek dataset yang telah kita buat, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.2. Gambar 2.2: Visualisasi tahapan input dataset pada R Commander. Terdapat beberapa hal yang perlu diperhatikan pada proses input data, antara lain: Dalam pemberian rownames. Jika rownames mengandung spasi, input rownames disertai tanda quote (contoh:\"Nama Baris\"). Jika tidak ingin menggunakan spasi pada rownames, gunakan tanda titik atau koma sebagai pemisah kata (contoh:Nama.Baris atau Nama_Baris). Pastikan rownames bersifat unik (tidak ada duplikasi nama). Pembaca dapat menggunakan tombol pada pada keyboard untuk bernavigasi pada data editor atau gunakan klik kiri pada sel yang ingin dituju. Jenis data pada kolom akan secara otomatis ditentukan oleh seluruh data yang ada pada kolomnya. Jika data berupa angka, program secara otomatis mengkonversinya menjadi data numeric. Jika data berupa campuran angka atau karakter, secara otomatis program mengkonversinya menjadi Character. Pembaca dapat memperluas area sel dengan cara menggeser sisi sel atau dengan cara memperluas melalui menggeser ujung jendela editor. Dataset yang telah dibuat dapat diedit kembali dengan cara klik toolbar Edit data set. "],
["impeks.html", "2.5 Membaca Data dari File Eksternal", " 2.5 Membaca Data dari File Eksternal body{ text-align: justify} Pada Chapter 2.5, pembaca akan mempelajari bagaimana cara melakukan import data dari berbagai sumber seperti plain text, spreadsheets, SPSS, STATA, SAS, dan Minitab. Sebelum melakukan hal tersebut terdapat beberapa hal yang perlu pembaca perhatikan, antara lain: Pastikan data berada dalam format tidy data (lihat Chapter 2.3), dan Pastikan missing value berada pada notasi yang konsisten. Data yang berasal dari berbagai sumber akan memberikan format notasi missing value yang berbeda-beda, misalnya data yag berasal dari database akan memberikan notasi NULL terhadap missing value, sedangkan data yang berasal dari spreadsheet akan memberikan notasi missing value berdasarkan operasi yang dilakukan pada datanya (contoh: #VALUE! untuk hasil operasi 2 buah objek berbeda tipe datanya). RCommander tidak dapat menangani kondisi di mana pada satu kolom data terdapat lebih dari 1 notasi missing value. Untuk mengatasi hal tersebut, pembaca perlu menyeragamkan notasi missing value pada data (contoh: mengubahnya menjadi notasi NA atau dikosongkan jika data bersumber dari spreadsheet). Pada Chapter 2.5, pembaca akan diberikan contoh bagaimana melakukan import data yang disajikan pada Tabel 2.8. Tabel 2.8: Sepuluh Observasi pertama dataset mtcars mpg cyl disp hp drat wt qsec vs am gear carb 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2 18.1 6 225.0 105 2.76 3.460 20.22 1 0 3 1 14.3 8 360.0 245 3.21 3.570 15.84 0 0 3 4 24.4 4 146.7 62 3.69 3.190 20.00 1 0 4 2 22.8 4 140.8 95 3.92 3.150 22.90 1 0 4 2 19.2 6 167.6 123 3.92 3.440 18.30 1 0 4 4 Adapun penjelasan terkait Tabel 2.8 ditampilkan pada Tabel 2.9 Tabel 2.9: Penjelasan variabel dataset mtcars. Variabel Keterangan mpg Mil/(US) galon cyl Jumlah silinder disp Displacement (cu.in) hp Gross horsepower drat Rasio gandar belakang wt Berat (1000 lb) qsec Watu tempuh 1/4 mil vs Mesin (0=V-shape, 1=straight) am Transmisi (0=otomatis, 1=manual) gear Jumlah gear depan carb Jumlah karburator 2.5.1 Membaca Data dari Sumber Plain Text Terdapat 3 buah metode untuk membaca data dari plain text. Metode tersebut dibagi berdasarkan lokasi file plain text tersebut berada. Membaca file yang berada pada sistem lokal Pada menu Data, klik Data/Import data/from text file,clipboard,or URL.... Pada jendela yang muncul, isikan spesifikasi file (lihat Tabel 2.10) dan nama objek dataset yang diinginkan. Pada bagian Location of Data File pilih Local file system. Klik OK. Pada jendela Windows Explorer yang muncul, pilih file yang hendak dibaca. Klik Open. Untuk melihat dataset yang berhasil dibuat, klik pada toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.3. Gambar 2.3: Visualisasi tahapan membaca file plain text dari sistem lokal. Membaca file yang berada pada clipboard Higlight tabel dataset yang pembaca miliki dan copy dataset tersebut. Dataset tersebut selanjutnya akan tersimpan pada clipboard. Pada menu Data, klik Data/Import data/from text file,clipboard,or URL.... Pada jendela yang muncul, isikan spesifikasi file (lihat Tabel 2.10) dan nama objek dataset yang diinginkan. Pada bagian Location of Data File pilih clipboard .Klik OK. Dataset akan secara otomatis dibuat oleh program dengan mengambil data yang tersimpan pada clipboard. Untuk melihat dataset yang berhasil dibuat, klik pada toolbar View data set. Membaca file yang berada pada URL Copy halaman URL lokasi dataset berada. Pada menu Data, klik Data/Import data/from text file,clipboard,or URL.... Pada jendela yang muncul, isikan spesifikasi file (lihat Tabel 2.10) dan nama objek dataset yang diinginkan. Pada bagian Location of Data File pilih Internet URL. Klik OK. Pada jendela yang muncul tempelkan (pasting) halaman URL yang telah di copy sebelumnya. Untuk melihat dataset yang berhasil dibuat, klik pada toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.4. Gambar 2.4: Visualisasi tahapan membaca file plain text dari internet URL. Sintaks yang muncul pada R Console saat proses telah dilakukan adalah sebagai berikut: # sistem lokal Dataset &lt;- read.table(&quot;D:/mtcars.txt&quot;, header=TRUE, sep=&quot;&quot;, na.strings=&quot;NA&quot;, dec=&quot;.&quot;, strip.white=TRUE) # clipboard Dataset &lt;- read.table(&quot;clipboard&quot;, header=TRUE, sep=&quot;&quot;, na.strings=&quot;NA&quot;, dec=&quot;.&quot;, strip.white=TRUE) # URL Dataset &lt;- read.table(&quot;www.abcde.com/mtcars.txt&quot;, header=TRUE, sep=&quot;&quot;,na.strings=&quot;NA&quot;, dec=&quot;.&quot;, strip.white=TRUE) Tabel 2.10: Penjelasan terkait item pada jendela Read Text Data From File, Clipboard, or URL. No. Item Jenis Input Keterangan 1. Enter name for data set text input Input nama dataset yang diinginkan sebagai output 2. Variable name in file Check box Jika di centang, program membaca baris pertama tabel sebagai nama kolom 3. Missing value indikator text input Karakter yang mengidikasikan missing value dalam file (misal: White space, NA, NaN, dll) 4. Location of Data File radio button Lokasi file yang akan dibaca berada 5. Field Separator radio button Pemisah antar kolom data yang digunakan 6. Decimal-Point Character radio button Karakter yang digunakan sebagai penunjuk decimal-point 2.5.2 Membaca Data dari Sumber Spreadsheet dan Lainnya Format data lain yang dapat dibaca oleg R Commander adalah xlsx (Excel) ,.dta (STATA), .sav (SPSS), .sas7bdat dan .xport (SAS), serta .mtp (minitab). Cara membaca data dengan format tersebut cukup sederhana dilakukan pada R Commander. Pembaca hanya perlu menuju menu Data/Import data dan memilih sumber data yang ingin dibaca. Pada jendela yang muncul (kecuali format .xport) pembaca diminta untuk melakukan sejumlah konfigurasi seperti apakah rownames terletak pada kolom pertama, apakah perlu mengubah jenis data karakter menjadi faktor, dll. Pada kondisi dimana pembaca diminta untuk mengkonversi karakter menjadi faktor, penulis menyarankan untuk tidak melakukannya saat awal membaca data sebab akan menyulitkan pada saat melakukan analisis data selanjutnya. Konversi karakter menjadi faktor dilakukan pada sejumlah variabel yang memang ingin diubah menjadi faktor (bisa numerik atau karakter). Tampilan jendela konfigurasi awal saat membaca data ditampilkan pada Gambar 2.5. Gambar 2.5: Tampilan jendela konfigurasi import data berbagai format file. Contoh sintaks yang akan muncul saat proses tersebut selesai adalah sebagai berikut: # .xlsx Dataset &lt;- readXL(&quot;D:/mtcars.xlsx&quot;, rownames=FALSE, header=TRUE, na=&quot;&quot;, sheet=&quot;mtcars&quot;, stringsAsFactors=TRUE) # .sav Dataset &lt;- readSPSS(&quot;D:/mtcars.sav&quot;, rownames=FALSE, stringsAsFactors=TRUE, tolower=FALSE) # .xport Datasets &lt;- read.xport(&quot;D:/mtcars.xport&quot;) # .sasb7dat Dataset &lt;- readSAS(&quot;D:/mtcars.sas7bdat&quot;, stringsAsFactors=TRUE, rownames=FALSE) # .dta Dataset &lt;- readStata(&quot;D:/mtcars.dta&quot;, convert.dates=TRUE, stringsAsFactors=TRUE, rownames=FALSE) "],
["membaca-data-dari-paket.html", "2.6 Membaca Data dari Paket", " 2.6 Membaca Data dari Paket body{ text-align: justify} 2.6.1 Memuat Paket Jika pembaca ingin mengakses dataset dari paket yang pembaca inginkan, pembaca dapat menjalankan perintah berikut pada R Console: library(nama_paket) Jika paket tersebut belum terpasang, jalankan perintah berikut: install.packages(&quot;nama_paket&quot;) Jika pembaca kesulitan menggunakan cara tersebut, pembaca dapat menggunakan metode yang sama dengan cara memasang paket Rcmdr (lihat Chapter 1.2.4) dan memuat paket Rcmdr (lihat Chapter 1.3). 2.6.2 Memuat Dataset Pada Paket Untuk mengecek dataset apa saja yang tersedia paket yang telah aktif, lakukan langkah-langkah berikut: Pada menu Data, klik Data/Data in packages/List data set in packages. Jendela R data sets yang memberikan daftar seluruh dataset yang tersedia pada paket yang telah dimuat akan muncul. Pada proses tersebut, R Script akan memunculkan sebuah sintaks berikut: data() Visualisasi tahapan tersebut ditampilkan pada Gambar 2.6. Gambar 2.6: Tampilan langkah menampilkan seluruh dataset dari paket. 2.6.3 Membaca Data Untuk membaca dataset dari paket, jalankan langkah-langkah berikut: Pada menu Data, klik Data/Data in packages/Read data set from an attached package.... Pada kotak package, double click paket yang pembaca ingin lihat datasetnya. Daftar dataset selanjutnya akan muncul pada kotak Data set. Pilih dataset yang pembaca ingin baca. Pembaca dapat merubah nama dataset yang akan dibaca melalui kotak Enter nama of data set. Klik OK. Untuk melihat dataset yang telah dimuat, klik toolbar View data set. Pada contoh berikut, penulis mencoba memuat dataset mtcars dari paket datasets. Sintaks yang muncul pada R Script dan kotat Output adalah sebagai berikut: data(mtcars, package=&quot;datasets&quot;) Visualisasi tahapan tersebut ditampilkan pada Gambar 2.7. Gambar 2.7: Tampilan langkah membaca dataset pada paket. "],
["meyimpan-dan-memuat-data.html", "2.7 Meyimpan dan Memuat Data", " 2.7 Meyimpan dan Memuat Data body{ text-align: justify} 2.7.1 Menyimpan Dataset Data pada R Commander dapat disimpan ke dalam format .RData. Penyimpanan dalam format tersebut akan mempermudah pembaca untuk memperoleh data tersebut saat akan dibaca kembali dan pembaca tidak perlu mengulangi kembali proses membaca data pada bagian sebelumnya. Untuk dapat menyimpan data menggunakan format .RData yang telah berhasil dibaca pada R Commander, pembaca dapat melakukan langkah-langkah berikut: Pada menu Data, klik Data/Active data set/Save active data set.... Pada jendela Windows Explorer yang muncul, navigasikan ke lokasi atau folder di mana data tersebut akan disimpan. Beri nama data tersebut sesuai dengan nama yang diinginkan. Klik Save. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.8. Gambar 2.8: Tampilan tahapan menyimpan data ke dalam format RData. Pada R Script dan kotak Output akan muncul sintaks berikut yang menandakan bahwa data yang ada pada R Commander telah disimpan pada folder yang telah penulis inginkan. save(&quot;mtcars&quot;, file=&quot;D:/EnvStat/Rcmdr-book/dataset/mtcars.RData&quot;) Selain menyimpan data ke dalam format .RData, R Commander juga dapat menyimpan data ke dalam format .csv. Untuk melakukannya jalankan langkah berikut: Pada menu Data, klik Data/Active data set/Export active data set.... Pada jendela yang muncul, spesifikasikan format data yang akan disimpan (lihat Tabel 2.11). Pada jendela Windows Explorer yang muncul, navigasikan ke lokasi atau folder di mana data tersebut akan disimpan. Beri nama data tersebut sesuai dengan nama yang diinginkan. Klik Save. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.9. Gambar 2.9: Tampilan tahapan menyimpan data ke dalam format csv. Pada R Script dan kotak Output akan muncul sintaks berikut yang menandakan bahwa data yang ada pada R Commander telah disimpan pada folder yang telah penulis inginkan. write.table(mtcars, &quot;D:/mtcars2.csv&quot;, sep=&quot;,&quot;, col.names=TRUE, row.names=TRUE, quote=TRUE, na=&quot;NA&quot;) Tabel 2.11: Penjelasan item jendela Export active data set. No. Item Jenis Imput Keterangan 1. Write variable names check box pilihan apakah nama variabel akan disertakan ke dalam file csv 2. Write row names check box pilihan apakah nama baris disertakan ke dalam file csv 3. Quotes around character values check box pilihan apakah tipe data karakter diberi tanda petik 4. Missing values text input simbol atau karakter missing value yang digunakan pada file csv 5. Field Separator radio button pemisah antar kolom data yang digunakan 2.7.2 Memuat Data Data yang telah disimpan ke dalam format .RData dapat langsung dimuat ke dalam R Commander tanpa perlu menspesifikasikan kembali format data yang hendak dibaca. Untuk melakukannya jalankan langkah berikut: Pada menu Data, klik Data/Load data set.... Pada jendela Windows Explorer yang muncul, navigasikan ke lokasi atau folder di mana data tersebut berada. Pilih data yang akan dimuat. Klik Open. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.10. Gambar 2.10: Tampilan tahapan memuat data dalam format RData. "],
["modvar.html", "2.8 Memodifikasi Variabel pada Data", " 2.8 Memodifikasi Variabel pada Data body{ text-align: justify} Menu Data/Manage variables in active data set merupakan menu yang dibuat untuk memodifikasi variabel dan membuat variabel baru pada dataset. Pada Chapter 2.8, penulis akan memjelaskan cara menggunakan submenu Recode variables untuk merubah level pada tipe data factor dan membuat variabel baru dari variabel dengan tipe data numeric, penulis juga akan menjelaskan cara menggunakan submenu Reorder Factor Levels untuk mengubah urutan factor yang semula berdasarkan urutan alfabet menjadi sesuai dengan yang kita inginkan, serta informasi lain terkait penggunaan submenu pada menu Data/Manage variables in active data set. 2.8.1 Variabel Recoding Terdapat dua kegunaan submenu Recode Variables, yaitu: membuat factor baru dengan cara mentransformasi variabel numeric menjadi factor, serta merubah urutan level suatu factor. Ketentuan recode pada Recode Variables secara umum memiliki formula *nilai-lama=nilai-baru*, dimana nilai-baru (nilai awal variabel tercatat) dispesifikasi sesuai dengan Tabel 2.12. Berikut adalah sejumlah informasi yang perlu pembaca perhatikan untuk memahami penggunaan submenu Recode Varibles: Jika nilai variabel lama yang tercatat sama sekali ketentuan recode yang kita tetapkan, nilai tersebut hanya dibawa menuju Recode Variables. Sebagai contoh, jika aturan \"sangat setuju\"=\"setuju\" ditetapkan, tapi nilai lama untuk factor \"setuju\" tidak dicatat, maka kedua nilai lama (factor lama) tersebut digabung menjadi satu sehingga (\"sangat setuju\",\"setuju\")=\"setuju\". Jika nilai variabel lama yang dicatat memenuhi lebih dari satu ketetapan recode, maka ketentuan pertama yang berlaku diterapkan. Sebagai contoh, jika terdapat variabel pendapatan dengan ketentuan recode lo:2.500.000=\"rendah\" dan 2.500.000:7.500.000=\"sedang\", maka sebuah observasi dengan variabel pendapatan bernilai 2.500.000 akan dikategorikan sebagai \"rendah\". Seperti yang telah dijabarkan pada poin sebelumnya, karakter spesial lo digunakan untuk menyatakan nilai variabel numeric terkecil, sedangkan hi digunakan untuk variabel numeric dengan nilai tertinggi. Pada setiap ketentuan recode pastikan diakhiri dengan nilai else yang menunjukkan nilai lain diluar ketentuan recode sebelumnya (termasuk missing value). Tabel 2.12: Ketentuan recode pada submenu Recode Variables. No. Nilai Lama Contoh Ketentuan Recode 1. nilai individual(a) 99=NA; NA=\"missing\"; \"sangat setuju=\"setuju\" 2. sebuah set nilai (a,b,...,k) 1,3,5,..,k=\"ganjil\"; \"sangat setuju\",\"cukup setuju\"=\"setuju\" 3. rentang numerik (a:b) 1901:2000=\"abad 21\"; lo:2.000.000=\"rendah\"; 10.000.000:hi=\"tinggi\" 4. lainnya (else) else=\"lainnya\" Pada dataset mtcars (lihat Tabel 2.8), misalkan kita ingin menambahkan variabel baru berupa factor yang menyatakan klasifikasi kendaraan berdasarkan tingkat penggunaan bahan bakar per mil (mpg). Untuk kendaraan dengan ketentuan mpg lo:20=\"boros\", 20:30=\"sedang\", dan else=\"hemat\". Berikut adalah langkah-langkah untuk melakukannya: Pada menu Data, klik Data/Manage variables in active data set/Recode variables... Pada jendela yang muncul pilih variabel yang ingin dilakukan recoding, tentukan ketentuan recodingnya, dan nama variabel baru yang dihasilkan. Penjelasan terkait jendela tersebut ditampilkan pada Tabel 2.13. Spesifikasikan apakah tipe data variabel tersebut adalah factor atau bukan dengan mencentang checkbox. Klik OK. Untuk melihat variabel baru yang telah terbentuk, klik View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.11. Gambar 2.11: Tampilan tahapan recoding variabel. Proses tersebut akan memunculkan sintaks pada R Script sebagai berikut: mtcars &lt;- within(mtcars, {kategori &lt;- Recode(mpg, `lo:20.0=&quot;boros&quot;; 20.0:30.0=&quot;sedang&quot;; else=&quot;hemat&quot;; ;&#39;, as.factor=TRUE) }) Tabel 2.13: Penjelasan item jendela Recode Variables. No. Item Jenis Input Keterangan 1. Variables to recode select box daftar nama variabel yang akan di recode 2. New variable name ... text input nama baru untuk variabel yang dibuat 3. Make (each) variable.. check box pilihan apakah variabel baru adalah factor 4. Enter recode directives text input kotak untuk memasukkan ketentuan recode 2.8.2 Komputasi Variabel Baru Pada saat analisis data, variabel yang kita miliki terkadang tidak cukup untuk menjelaskan suatu fenomena. Namun, kita dapat membentuk sebuah variabel baru yang dapat membantu menjelaskan fenomena tersebut. Pembentukan variabel baru dapat berupa tranformasi sebuah variabel atau pembentukan variabel berdasarkan beberapa formulasi beberapa variabel lain. Dalam melakukan tranformasi variabel, kita dapat memanfaatkan sejumlah operator operasi yang telah penulis jelaskan pada Chapter 2.1.1. Selain operator tersebut, terdapat sejumlah fungsi operasi arimatika yang tersedia pada R. Fungsi-fungsi tersebut, antara lain: Logaritma dan eksponensial Untuk contoh fungsi logaritmik dan eksponensial jalankan sintaks berikut: log2(8) # logaritma basis 2 untuk 8 ## [1] 3 log10(8) # logaritma basis 10 untuk 8 ## [1] 0.9031 exp(8) # eksponensial 8 ## [1] 2981 Fungsi trigonometri fungsi trigonometri yang ditampilkan seperti sin,cos, tan, dll. cos(x) # cos x sin(x) # Sin x tan(x) # Tan x acos(x) # arc-cos x asin(x) # arc-sin x atan(x) #arc-tan x **PENTING!!!: x dalam fungsi trigonometri memiliki satuan radian Berikut adalah salah satu contoh penggunaannya: cos(pi) ## [1] -1 Fungsi matematik lainnya Fungsi lainnya yang dapat digunakan adalah fungsi absolut, akar kuadrat, dll. Berikut adalah contoh sintaks penggunaan fungsi absolut dan akar kuadrat. abs(-2) # nilai absolut -2 ## [1] 2 sqrt(4) # akar kuadrat 4 ## [1] 2 Untuk memahami permasalahan terkait komputasi variabel baru, kita akan membuat variabel baru pada dataset mtcars yang telah dijelaskan pada Tabel 2.8. Variabel baru yang akan kita buat adalah variabel rasio antara jarak tempuh per satuan bahan bakar (mpg) terhadap berat kendaraan (wt) dan kita namai variabel baru tersebut rwt. Variabel baru ini dapat menjadi alternatif lain dalam menjelaskan efisiensi suatu mobil yang ditandai dengan rasio antara jarak tempuh terhadap bobot dan konsumsi bahan bakarnya. Berikut adalah tahapan untuk melakukannya: Pada menu Data, klik Data/Manage variables in active data set/Compute new variable. Pada jendela yang muncul, ketikkan formula pembentuk variabel baru pada kotak Expression to compute. Untuk memasukkan nama variabel ke dalam formula, pembaca dapat mengetikkan nama variabel secara manual atau melakukan double click nama variabel yang tersedia pada kotak Current variables. Ketikkan nama variabel baru pada kotak New variable name. Klik OK. Untuk mengecek variabel yang telah terbentuk, klik View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.12. Gambar 2.12: Tampilan tahapan komputasi variabel baru. Berdasarkan tahapan tersebut, sintaks yang terbentuk pada R Script adalah sebagai berikut: mtcars$rwt &lt;- with(mtcars, mpg/ wt) 2.8.3 Menambahkan Variabel Nomor Observasi Pada Dataset Untuk menambahkan variabel nomor observasi pada dataset jalankan langkah-langkah berikut: Pada menu Data, klik Data/Manage variables in active data set/Add observation numbers to data set. Variabel ObsNumber berupa nomor observasi akan secara otomatis ditambahkan pada akhir kolom dataset. Untuk mengecek variabel baru tersebut, klik toolbar View data set. Pada akhir tahapan, sintaks berikut tercetak pada R Script: dataset$ObsNumber &lt;- 1:&quot;number of observation&quot; 2.8.4 Standardisasi Variabel Standardisasi variabel bertujuan untuk mentransformasi variabel sehingga variabel tersebut memiliki nilai rata-rata 0 dan simpangan baku 1. Tahapan melakukan standardisasi variabel pada R Commander adalah sebagai berikut: Pada menu Data, klik Data/Manage variables in active data set/Standardize variables.... Pada jendela yang muncul, pilih variabel yang akan di standardisasi. Pembaca dapat memilih lebih dari satu variabel dengan cara menekan tombol ctrl+klik (pada Windows) saat memilih variabel. Klik OK. Untuk mengecek variabel yang telah distandadrdisasi, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.13. Gambar 2.13: Tampilan tahapan standardisasi variabel. Sintaks yang digunakan dalam tahapan tersebut adalah sebagai berikut: dataset &lt;- local({ .Z &lt;- scale(dataset[,c(&quot;namavariabel&quot;)]) within(dataset, { Z.namavariabel &lt;- .Z[,nomor_kolom_variabel] }) }) 2.8.5 Merubah Variabel Numeric Menjadi Factor Pada Chapter 2.8.1, kita telah belajar bagaimana cara melakukan recoding variabel dan membentuk factor. Pada Chapter 2.8.5, kita akan membahas cara merubah variabel numeric menjadi factor tanpa perlu melakukan proses recoding. Pada Chapter ini, kita hanya perlu mesuplai variabel numeric yang akan diubah menjadi factor. Kita juga dapat menambahkan label pada factor tersebut. Untuk melakukannya jalankan langkah-langkah berikut: Pada menu Data, klik Data/Manage variables in active data set/Convert numeric varibles to factors. Spesifikasikan variabel yang akan diubah menjadi factor (lihat Tabel 2.14). Klik OK Untuk mengecek apakah variabel telah terkonversi menjadi factor, klik Statistics/Summaries/Active data set. Variabel yang telah dikonversi menjadi factor akan memberikan ringkasan data berupa tabel kontingensi (tidak menampilkan mean, min, max, dll). Visualisasi tahapan tersebut ditampilkan pada Gambar 2.14. Gambar 2.14: Tampilan tahapan merubah variabel numeric menjadi factor. Sintaks yang dihasilkan pada proses tersebut adalah sebagai berikut: # use numbers dataset &lt;- within(dataset, { namavariabel &lt;- as.factor(namavariabel) }) # supply level names dataset&lt;- within(dataset, { namavariabel &lt;- factor(namavariabel, labels=c(&#39;label1&#39;,&#39;label2&#39;,...)) }) Tabel 2.14: Penjelasan item convert numeric variables to factors. No. Item Jenis Input Keterangan 1. Variables select box daftar nama variabel yang akan diubah menjadi factor 2. Factor levels radio button pilihan apakah perlu menambahkan label pada factor atau tidak 3. New variable name or... text input jika tidak diisi maka variabel lama akan diganti variabel baru (tidak ada variabel baru ditambahkan) 2.8.6 Melakukan Binning pada Variabel Numeric Binning variabel numeric merupakan cara untuk mengelompokkan nilai variabel numeric ke dalam suatu kelas berdasarkan rentang tertentu. Penetapan rentang pada proses binning di R Commander terbagi atas 3 metode, yaitu: Equal-width : membagi data ke dalam kelas berdasarkan interval yang seragam. Equal-count : membagi data ke dalam kelas berdasarkan jumlah kelas yang sama. Natural break : membagi data ke dalam kelas berdasarkan jarak terdekat (biasanya menggunakan jarak Euclidian) pada pusat masing-masing kelas. Algoritma pengelompokan yang biasa digunakan adalah algoritma k-means (baca K-Means). Tahapan untuk melakukan proses binning variabel numeric antara lain: Pada menu Data, klik Data/Manage variables in active data set/Bin numeric variable.... Pada jendela yang muncul spesifikasikan variabel numeric yang akan di binning dan metode pengelompokan yang digunakan (lihat Tabel 2.15. Klik OK. Untuk mengecek variabel hasil binning, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.15. Gambar 2.15: Tampilan tahapan binning variabel numeric. Sintaks yang digunakan pada masing-masing metode binning, antara lain: # Equal-width dataset$namavariabel &lt;- with(dataset, binVariable(variabel, bins=&quot;jumlah_bin&quot;, method=&#39;intervals&#39;, labels=c(&quot;label1&quot;,...))) dataset$namavariabel &lt;- with(dataset, binVariable(variabel, bins=&quot;jumlah_bin&quot;, method=&#39;proportions&#39;, labels=c(&quot;label1&quot;,...))) dataset$namavariabel &lt;- with(dataset, binVariable(variabel, bins=&quot;jumlah_bin&quot;, method=&#39;natural&#39;, labels=c(&quot;label1&quot;,...))) Tabel 2.15: Penjelasan item jendela convert numeric variables to factors. No. Item Jenis Input Keterangan 1. Variables to bin select box daftar nama variabel numeric yang akan dilakukan binning 2. New variable name text input Input nama variabel baru 3. Number of bins slider spesifikasi jumlah bin atau kelas yang digunakan 4. Level Names radio button spesifikasi metode penamaan bin 5. Binning Method radio button spesifikasi metode binning 2.8.7 Merubah Urutan Factor Levels Secara umum saat kita merubah sebuah variabel character atau string menjadi factor level factor hasil konversi tersebut diurutkan berdasarkan abjad. Sebuah variabel yang terdiri dari nilai “setuju”, “netral”, dan “tidak setuju”, jika diubah menjadi factor akan memiliki urutan level “netral”, “setuju”, dan “tidak setuju”. Urutan tersebut tidak benar dan perlu dirubah. Untuk melakukannya pada R Commander jalankan langkah-langkah berikut: Pada menu Data, klik Data/Manage variables in active data set/Reorder factor levels.... Pada jendela yang muncul spesifikasikan variable factor yang akan dirubah (lihat Tabel 2.16. Klik OK. Pada jendela yang muncul, rubah urutan factor lama. Klik OK. Untuk mengecek factor level, jalankan sintaks berikut: # ubah nama dataset dan variabel levels(dataset$namavariabel) Visualisasi tahapan tersebut ditampilkan pada Gambar 2.16. Gambar 2.16: Tampilan tahapan merubah urutan factor level. Sintaks dari tahapan merubah urutan factor secara umum ditampilkan sebagai berikut: dataset$namavariabel &lt;- with(dataset, factor(namavariabel, levels=c(&#39;level1&#39;, &#39;level2&#39;, ....), ordered=TRUE)) Tabel 2.16: Penjelasan item jendela reorder factor levels. No. Item Jenis Input Keterangan 1. Factor select box daftar variabel factor pada dataset 2. Name for factor text input nama variabel factor yang baru (jika ingin membuat variabel baru) 3. Make ordered factor check box spesifikasi apakah factor akan diurutkan atau tidak 2.8.8 Melakukan Drop pada Factor Levels Saat melakukan subset pada dataset yang akan dijelaskan pada Chapter 2.9 sering kali tidak semua factor level ada pada dataset tersebut (sejumlah factor level memiliki observasi nol) yang berpengaruh pada analisis data yang kita lakukan. Untuk mengatasinya, kita dapat melakukan drop pada factor level tersebut. Untuk melakukannya, jalankan langkah-langkah berikut: Pada menu Data, klik Data/Manage variables in active data set/Drop unused factor levels.... Pada jendela yang muncul spesifikasikan variable factor yang akan didrop factor levelnya. Klik OK. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.17. Gambar 2.17: Tampilan tahapan drop factor level. Sintaks untuk melakukan drop factor levels secara umum adalah sebagai berikut: dataset &lt;- within(dataset, { namavariabel &lt;- droplevels(namavariabel) }) 2.8.9 Merubah Nama Variabel pada Data Untuk merubah nama variabel pada R Commander dapat dilakukan dengan dua cara, antara lain: Cara 1 Klik toolbar Edit data set. Pada jendela dataset yang muncul , double click nama variabel yang ingin dirubah dan ubah nama variabel tersebut. Klik OK Cara 2 Pada menu Data, klik Data/Manage variables in active data set/Rename variables.... Pada jendela yang muncul pilih variabel yang ingin dirubah namanya. Klik OK. Pada jendela yang muncul, isikan nama variabel baru dan Klik OK jika telah selesai. Untuk mengecek apakah proses telah berhasil, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.18. Gambar 2.18: Tampilan tahapan merubah nama variabel. Sintaks untuk merubah nama variabel secara umum adalah sebagai berikut: names(dataset)[c(nomorvariabel)] &lt;- c(&quot;namavariabelbaru&quot;) 2.8.10 Menghapus Variabel Untuk menghapus variabel pada dataset, jalankan langkah-langkah berikut: Pada menu Data, klik Data/Manage variables in active data set/Delete variables from data set.... Pada jendela yang muncul pilih variabel yang ingin dihapus. Klik OK. Untuk mengecek apakah proses telah berhasil, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.19. Gambar 2.19: Tampilan tahapan menghapus variabel. Sintaks untuk menghapus variabel secara umum adalah sebagai berikut: dataset &lt;- within(dataset, { namavariabel1 &lt;- NULL namavariabel2 &lt;- NULL }) "],
["transdata.html", "2.9 Memanipulasi Dataset", " 2.9 Memanipulasi Dataset body{ text-align: justify} Pada Chapter 2.9, kita akan belajar bagaimana memanipuasi dataset. Adapun yang menjadi topik bahasan dalam Chapter 2.9, antara lain: Melakukan subset dataset, Agregasi variabel pada dataset, Melakukan drop observasi pada dataset, Melakukan drop observasi dengan missing value, Mengelompokkan variabel menjadi variabel factor dan nilai, Menggabungkan dua dataset, dan, Modifikasi lainnya. 2.9.1 Melakukan Subset Dataset Pada analisis data, kita sering kali tidak membutuhkan seluruh observasi dari data yang kita miliki. Kita akan melakukan filter untuk memperoleh data sesuai dengan keperluan kita. Selain itu, melihat subset data berdasarkan kriteria tertentu membantu kita untuk melakukan analisis ekspolarif terhadap data yang kita miliki. Untuk melakukan subset data, kita memelukan sebuah ekpresi atau formula yang dapat mengecek satu persatu data yang memenuhi formula subset yang telah dibentuk. Sebagai contoh, kita ingin memperoleh dataset tanpa nilai missing value pada variabel namavariabel. Berikut adalah contoh sintaks formula atau ekspresi yang digunakan: !is.na(namavariabel) Untuk membuat formula atau ekspresi tersebut, kita dapat menggunakan kembali operator operasi yang telah dijelaskan pada Chapter 2.1. Langkah-langkah untuk melakukan subset pada dataset adalah sebagai berikut: Pada menu Data, klik Data/Active data set/Subset active data set.... Pada jendela yang muncul spesifikasikan variabel yang akan dipilih pada dataset baru dan formula subset yang digunakan (lihat Tabel 2.17). Klik OK. Untuk mengecek dataset, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.20. Gambar 2.20: Tampilan tahapan melakukan subset pada dataset. Secara umum sintaks untuk melakukan proses subset adalah sebagai berikut: contoh_subset &lt;- subset(dataset,subset=formula_subset) Tabel 2.17: Penjelasan item jendela subset data set. No. Item Jenis Input Keterangan 1. Include all variables check box opsi apakah akan menyertakan seluruh variabel pada hasil subset 2. Variables select box daftar nama variabel yang dapat dipilih untuk ditampilkan pada hasil subset 3. Subset expression text input formula atau ekpresi subset yang digunakan 4. Name for new data set text imput opsi untuk memberikan nama pada dataset baru atau tidak (dataset lama akan dihapus) 2.9.2 Agregat Variabel pada Dataset Submenu agregate variables in active dataset memberikan ringkasan nilai satu atau beberapa variabel berdasarkan level variabel factor dan menghasilkan dataset baru dengan satu observasi untuk tiap level factor. Proses agregasi mengaplikasikan beberapa fungsi seperti mean(), sum(), atau fungsi lainnya untuk menghasilkan sebuah nilai untuk setiap observasi pada tiap variabel dan level factor. Fungsi statistika deskriptif bawaan yang dapat digunakan pada R Commander ditampilkan pada Tabel 2.18. Tabel 2.18: Fungsi statistika deskriptif bawaan pada R. Fungsi Keterangan mean rata-rata median median sum jumlah seluruh observasi dalam sebuah variabel quantile kuantil data min nilai observasi minimum max nilai observasi maksimum IQR rentang antar kuartil mad simpangan absolut median sd simpangan baku var varians Tahapan agregasi variabel dilakukan melalui langkah-langkah berikut: Pada menu Data, klik Data/Active data set/Aggregate variables in active data set.... Spesifikan variabel yang akan dilakukan agregasi, factor level yang digunakan, dan fungsi agregat yang digunakan (lihat Tabel 2.19). Klik OK. Untuk mengecek dataset, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.21. Gambar 2.21: Tampilan tahapan agregasi variabel. Tabel 2.19: Penjelasan item jendela aggregate observations. No. Item Jenis Input Keterangan 1. Name for aggregated.. text input input nama dataset baru yang dihasilkan 2. Variables to aggregate select box daftar nama variabel yang dapat dipilih untuk diagregasi 3. Aggregated by select box daftar nama variabel factor yang digunakan untuk agregasi 4. Statistic text imput fungsi statistik yang digunakan untuk agregasi Sintaks untuk melakukan proses agragasi secara umu dituliskan sebagai berikut: datasetbaru&lt;- aggregate(dataframe ~ var_factor, data=dataset, FUN=statistic, ...) Argumen ... pada sintaks tersebut merupakan argumen tambahan pada fungsi statistik yang digunakan. Secara umum argumen tambahan yang digunakan fungsi yang ditampilkan pada Tabel 2.18 adalah na.rm=TRUE, yaitu: jika data mengandung missing value, maka observasi yang mengandung missing value tersebut akan di drop. Selain argumen tersebut, fungsi quantile memerlukan argumen spesifikasi prob atau spesifikasi kuantil yang akan ditampilkan (misal:prob=0.5 untuk kuantil ke-50 atau median). Untuk menambahkan argumen tersebut, pembaca dapat menspesifikasikannya pada bagian Statistic pada jendela aggregate observations yaitu pada pilihan Other (specify) seperti yang ditunjukkan pada Gambar 2.21. 2.9.3 Melakukan Drop Observasi pada Dataset Kita dapat melakukan drop terhadap sejumlah baris observasi berdasarkan indeks (nomor baris observasinya) atau nama baris observasinya. Seleksi baris yang akan didrop dilakukan menggunakan metode yang ditampilkan pada Tabel 2.12, yaitu: baris individual (contoh: 1), set baris (contoh: 1,2,3..,k), atau rentang baris (contoh: 1:5) untuk seleksi menggunakan indeks. Langkah-langkah untuk melakukan seleksi baris yang akan didrop adalah sebagai berikut: Pada menu Data, klik Data/Active data set/Remove row(s) from active data set.... Spesifikan index baris yang akan di drop dan nama output dataset baru (lihat Tabel 2.20). Klik OK. Untuk mengecek dataset, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.22. Gambar 2.22: Tampilan tahapan melakukan drop observasi. Sintaks yang digunakan untuk melakukan drop baris observasi secara umu adalah sebagai berikut: datasetbaru &lt;- dataset[-c(indeks),] Tabel 2.20: Penjelasan item jendela remove rows from active data set. No. Item Jenis Input Keterangan 1. Indices or quoted... text input indeks atau nama baris yang akan di drop atau di hapus 2. Name for new data set text input input nama dataset baru yang dihasilkan 2.9.4 Melakukan Drop Observasi dengan Missing Value Selain menggunakan submenu subset active data set, drop missing value dapat pula dilakukan dengan menggunakan submenu remove cases with missing data. Perbedaan antara metode pertama dan kedua adalah pada metode kedua drop missing value dilakukan pada seluruh variabel dalam dataset. Tahapan untuk melakukannya adalah sebagai berikut: Pada menu Data, klik Data/Active data set/Remove cases with missing data.... Spesifikan variabel yang akan dipilih untuk dataset baru dan nama output dataset (lihat Tabel 2.21). Klik OK. Untuk mengecek dataset, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.23. Gambar 2.23: Tampilan tahapan melakukan drop observasi dengan missing value. Sintaks untuk melakukan drop missing value pada seluruh variabel dalam dataset secara umum adalah sebagai berikut: datasetbaru &lt;- na.omit(dataset) Tabel 2.21: Penjelasan item jendela remove missing data. No. Item Jenis Input Keterangan 1. Include all variables check box pilihan apakah akan menyertakan seluruh variabel pada dataset baru atau tidak 2. Variables select box daftar variabel yang dapat dipilih untuk disertakan dalam dataset baru 3. Name for new data set text input input nama dataset baru 2.9.5 Mengelompokkan Variabel Menjadi Variabel Factor dan Nilai Submenu stack variables in active data set membuat sebuah dataset baru dimana dua atau lebih variabel ditumpuk menjadi variabel satu variabel dengan nilai variabel sebelumnya ditampilkan pada variabel nilai. Jika terdapat \\(n\\) observasi dalam dataset dan \\(k\\) variabel, maka dataset baru akan terdiri dari 2 variabel (factor dan numeric) dan \\(n\\times k\\) observasi. Tahapan untuk melakukannya adalah sebagai berikut: Pada menu Data, klik Data/Active data set/Stack variables in active data set.... Spesifikan variabel yang akan dipilih untuk dataset baru dan nama output dataset (lihat Tabel 2.22). Klik OK. Untuk mengecek dataset, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.24. Gambar 2.24: Tampilan tahapan mengelompokkan variabel menjadi variabel factor dan nilai. Terdapat dua buah sintaks dalam melakukan proses pengelompokan data. Sintaks pertama melakukan pengelompokan data, sedangkan sintaks kedua merubah nama kolom dataset baru. Kedua sintaks tersebut adalah sebagai berikut: datasetbaru &lt;- stack(dataset[, c(&quot;variabel1&quot;,&quot;variabel2&quot;,..)]) names(datasetbaru) &lt;- c(&quot;value&quot;, &quot;factor&quot;) Tabel 2.22: Penjelasan item jendela stack variables. No. Item Jenis Input Keterangan 1. Variables select box daftar variabel yang dapat dipilih untuk dikelompokkan 2. Name for staked data.. text input nama dataset baru hasil pengelompokan 3. Name for variable text input nama variabel nilai hasil pengelompokkan 4. Name for factor text input nama variabel factor hasil pengelompokan nama variabel pada dataset sebelumnya 2.9.6 Menggabungkan Dua Dataset Untuk menggabungkan dua buah dataset, kedua dataset perlu memiliki elemen kunci yang sama. Secara default R Commander mengambil rownames sebagai elemen kunci, sehingga elemen kunci yang dimiliki oleh masing-masing dataframe haruslah konsisten satu sama lain. Penggabungan dataset dapat dilakukan melalui penggabungan kolom dan baris. Penggabungan juga dapat dilakukan melalui elemen unik dari baris maupun kolom. Maksudnya adalah R Commander hanya menggabungkan dataset yang memiliki elemen kunci sama (rownames sama) pada kedua dataset. Jika terdapat observasi pada dataset 1 dan tidak memiliki rownames atau elemen kunci sama pada dataset 2, maka observasi tersebut akan dihapus dari proses penggabungan data. Tahapan penggabungan dua buah dataset adalah sebagai berikut: Pada menu Data, klik Data/Merge data set.... Pada jendela yang muncul, klik dataset yang akan digabungkan dan cara penggabungannya (lihat Tabel 2.23). Klik OK. Untuk mengecek dataset, klik toolbar View data set. Visualisasi tahapan tersebut ditampilkan pada Gambar 2.25. Gambar 2.25: Tampilan tahapan menggabungkan dua buah dataset. Sintaks yang digunakan untuk menggabungkan dua buah dataset secara umum adalah sebagai berikut: # penggabungan baris tanpa mempertimbangkan # elemen unik datasetbaru &lt;- mergeRows(data1, data2, common.only=FALSE) # pengagbungan kolom dengan mempertimbangkan # elemen unik datasetbaru &lt;- merge(data1, data2, all=FALSE, by=&quot;row.names&quot;) rownames(datasetbaru) &lt;- datasetbaru$Row.names datasetbaru$Row.names &lt;- NULL Tabel 2.23: Penjelasan item jendela merge data sets. No. Item Jenis Input Keterangan 1. Name for merge data set text input input nama dataset baru 2. First Data set select box daftar dataset pertama yang akan digabung 3. Second Data set select box daftar dataset kedua yang akan digabung 4. Direction or Merge radio button pilihan cara penggabungan 5. Merge only common... check box opsi apakah hanya observasi dengan elemen unik yang ada pada dua buah dataset yang akan digabungkan 2.9.7 Modifikasi Lainnya Daftar submenu yang digunakan untuk melakukan modifikasi dataset lainnya pada R Commander, antara lain: Select active data set : submenu ini memiliki fungsi sama dengan toolbar Data set, yaitu: memilih dataset yang diaktifkan. Jika pada jendela yang muncul terdapat beberapa dataset yang dapat diaktifkan, pembaca dapat memilih satu dataset dari daftar tersebut untuk diaktifkan. Refresh active data set : submenu yang berfungsi untuk melakukan reset informasi yang dipertahankan terkait dataset yang aktif, seperti: nama vraiabel pada dataset, jenis data pada dataset tersebut, dll. Pembaca mungkinperlu melakukan refresh terhadap dataset yang aktif jika pembaca melakukan sebuah perubahan pada dataset tersebut diluar menu R Commander. Help on active data set : menampilkan dokumentasi terkait dataset yang aktif (biasanya dataset yang ada dalam sebuah paket). Variables in active data set : menampilkan daftar variabel yang ada dalam data set. Set case name : memilih sebuah variabel pada dataset aktif dan selanjutnya menjadikan variabel tersebut sebagai rownames observasi dalam dataset tersebut. "],
["latihan.html", "2.10 Latihan", " 2.10 Latihan Sebuah IPAL memiliki laporan hasil pemantauan parameter dissolved oxygen (DO) dan biochemical oxygen demand (BOD) pada outlet IPAL yang ditampilkan pada Tabel 2.24. Inputkan data tersebut ke dalam R Commander! Tabel 2.24: Hasil pemantauan parameter DO dan BOD outlet IPAL X Bulan DO BOD 1 5.20 7.82 2 1.91 10.10 3 5.95 8.65 4 3.38 9.43 5 3.70 10.16 6 5.65 9.62 7 5.48 7.68 8 4.26 9.61 9 4.15 8.66 10 5.06 11.85 11 6.56 8.33 12 3.47 10.16 Data pengukuran inlet dan outlet konsentrasi BOD, COD, dan DO dari 10 IPAL yang ada di Kota X ditampilkan pada Tabel 2.25. Hitung efisiensi pengolahan masing-masing IPAL tersebut untuk ketiga parameter tersebut dan amati perubahan rasio BOD/COD pada inlet dan outlet masing-masing IPAL tersebut! Tabel 2.25: Hasil pemantauan parameter DO,BOD,dan COD 10 IPAL Kota X DOinlet DOoutlet BODinlet BODoutlet CODinlet CODoutlet IPAL 1 5.09 3.74 35.02 18.26 51.39 27.50 IPAL 2 4.03 2.71 37.83 11.98 41.79 22.50 IPAL 3 5.03 4.32 33.09 4.81 44.90 22.13 IPAL 4 5.16 2.86 35.58 8.58 45.17 15.74 IPAL 5 6.24 4.34 38.65 15.61 50.04 14.68 IPAL 6 4.38 0.85 30.21 13.75 53.46 19.03 IPAL 7 6.40 1.96 34.32 11.71 48.71 12.60 IPAL 8 5.02 2.77 36.95 10.24 53.25 16.36 IPAL 9 3.38 2.54 34.59 11.56 48.41 14.28 IPAL 10 5.09 1.03 35.58 16.60 44.17 16.00 Lakukan data merging pada elemen unik antara Tabel 2.25 dan Tabel 2.26! Tabel 2.26: Hasil pemantauan parameter TSS 12 IPAL Kota X TSSinlet TSSoutlet IPAL 1 19.63 20.52 IPAL 2 20.71 7.13 IPAL 3 20.35 9.17 IPAL 4 21.25 15.43 IPAL 5 19.07 3.64 IPAL 6 21.21 12.46 IPAL 7 21.20 4.07 IPAL 8 19.76 10.15 IPAL 9 19.86 10.20 IPAL 10 20.87 4.99 IPAL 11 18.37 12.73 IPAL 12 20.36 14.58 "],
["ringkasan-dan-visualisasi-data.html", "Chapter 3 Ringkasan dan Visualisasi Data", " Chapter 3 Ringkasan dan Visualisasi Data body{ text-align: justify} "],
["uji-statistik-sederhana.html", "Chapter 4 Uji Statistik Sederhana", " Chapter 4 Uji Statistik Sederhana body{ text-align: justify} "],
["linier-dan-generalized-linear-model.html", "Chapter 5 Linier dan Generalized Linear Model", " Chapter 5 Linier dan Generalized Linear Model body{ text-align: justify} "],
["distribusi-probabilitas-dan-simulasi.html", "Chapter 6 Distribusi Probabilitas dan Simulasi", " Chapter 6 Distribusi Probabilitas dan Simulasi body{ text-align: justify} "],
["referensi.html", "Referensi", " Referensi body{ text-align: justify} Fox, J. 2005. The R Commander: A Basic-Statistics Graphical User Interface to R. Journal of Statistical Software.Vol:14(9), p:1-42. Fox, J. 2017. Using the R Commader: A Point-and-Click Interface for R. CRC Press. Fox, J. Valat, M.B. 2018. Getting Started With the R Commander.https://socialsciences.mcmaster.ca/jfox/Misc/Rcmdr/Getting-Started-with-the-Rcmdr.pdf. Gio, P.U. Irawan, D.E. 2016. Belajar Statistika dengan R (disertai beberapa contoh perhitungan manual). USU Press : Medan. Nguyen-Feng, V. Stellmack, M.A. 2016. A Guide to Data Aalysis in R Commander. University of Minnesota. Primartha, R. 2018. Belajar Machine Learning Teori dan Praktik. Penerbit Informatika : Bandung. Quick-R. Data Input. https://www.statmethods.net/input/index.html Quick-R. Data Management. https://www.statmethods.net/management/index.html Rosadi,D. 2011. Analisis Ekonometrika dan Runtun Waktu Terapan dengan R. Penerbit Andi: Yogyakarta. Rosadi,D. 2016. Analisis Statistika dengan R. Gadjah Mada University Press: Yogyakarta. Rosidi, M. 2019. Metode Numerik Menggunakan R Untuk Teknik Lingkungan. https://bookdown.org/moh_rosidi2610/Metode_Numerik/. STHDA. Importing Data Into R . http://www.sthda.com/english/wiki/importing-data-into-r STHDA. Exporting Data From R. http://www.sthda.com/english/wiki/exporting-data-from-r STDHA. Getting Help With Functions In R Programming. http://www.sthda.com/english/wiki/getting-help-with-functions-in-r-programming . Venables, W.N. Smith D.M. and R Core Team. 2018. An Introduction to R. R Manuals. Wickham, H. Grolemund G. 2016. R For Data Science: Import, Tidy, Transform, Visualize, And Model Data. O’Reilly Media, Inc. Widodo, B. Rachmawati, R.N. 2013. Pengantar Praktis Pemrograman R untuk Ilmu Komputer. Halaman Moeka Publishing : Jakarta. "]
]
